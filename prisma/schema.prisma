generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  customId             String?      @unique
  name                 String
  username             String       @unique
  email                String       @unique
  phone                String?
  address              String?
  birthDate            String?
  joinDate             String
  role                 Role         @default(KARYAWAN)
  position             String
  department           String
  image                String?
  status               UserStatus
  lastLogin            DateTime?
  passwordHash         String
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  id                   String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  attendances          Attendance[]
  barcodes             Barcode[]

  @@map("users")
}

model Attendance {
  userId    String
  date      String
  clockIn   String
  clockOut  String?
  status    AttendanceStatus
  photoIn   String?
  photoOut  String?
  createdAt DateTime         @default(now())
  id        String           @id @default(uuid()) @db.Uuid
  user      User             @relation(fields: [userId], references: [customId])
}

model AlatKalibrasi {
  nama_alat          String
  merek_model        String
  nomor_seri         String   @unique
  rentang_pengukuran String
  kelas_akurasi      String
  tanggal_kalibrasi  String
  tanggal_kadaluarsa String
  id_lokasi          String
  status             String
  foto               String?
  createdAt          DateTime @default(now())
  id                 String   @id @default(uuid()) @db.Uuid
}

model SparePart {
  nama      String
  kode      String   @unique
  jumlah    Int
  lokasi    String
  supplier  String?
  foto      String?
  status    String
  createdAt DateTime @default(now())
  id        String   @id @default(uuid()) @db.Uuid
}

model Barcode {
  userId    String
  code      String   @unique
  createdAt DateTime @default(now())
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [customId])
}

enum Role {
  ADMIN
  OWNER
  DIREKTUR
  MANAJER
  KARYAWAN
  TEKNISI
}

enum UserStatus {
  AKTIF
  NONAKTIF
  DITANGGUHKAN
}

enum AttendanceStatus {
  TEPAT_WAKTU
  TERLAMBAT
  PULANG_CEPAT
}
